!function(){try{var e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},t=(new e.Error).stack;t&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[t]="191cab6b-1b1d-4eb2-8fda-cf3c55b7dad4",e._sentryDebugIdIdentifier="sentry-dbid-191cab6b-1b1d-4eb2-8fda-cf3c55b7dad4")}catch(e){}}();"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5931],{70888:function(e,t,s){s.d(t,{$K:function(){return l},Eh:function(){return d},GT:function(){return g},PJ:function(){return y},U_:function(){return r},W:function(){return f},ae:function(){return m},bj:function(){return _},dl:function(){return h},fg:function(){return v},jp:function(){return S},n7:function(){return i},tZ:function(){return p},up:function(){return b},xN:function(){return c}});var n,r,a=s(28977),o=s.n(a);let i="https://supabase.com/docs/guides/platform/logs#querying-with-the-logs-explorer",l=4,c=[{label:"Recent Errors",mode:"simple",searchString:"[Ee]rror|\\s[45][0-9][0-9]\\s",for:["api"]},{label:"Commits",mode:"simple",searchString:"COMMIT",for:["database"]},{label:"Commits By User",description:"Count of commits made by users on the database",mode:"custom",searchString:"select\n  p.user_name,\n  count(*) as count\nfrom postgres_logs\n  left join unnest(metadata) as m on true\n  left join unnest(m.parsed) as p on true\nwhere\n  regexp_contains(event_message, 'COMMIT')\ngroup by\n  p.user_name\n  ",for:["database"]},{label:"Metadata IP",description:"List all IP addresses that used the Supabase API",mode:"custom",searchString:"select\n  cast(timestamp as datetime) as timestamp,\n  h.x_real_ip\nfrom edge_logs\n  left join unnest(metadata) as m on true\n  left join unnest(m.request) as r on true\n  left join unnest(r.headers) as h on true\nwhere h.x_real_ip is not null\n",for:["api"]},{label:"Requests by Country",description:"List all ISO 3166-1 alpha-2 country codes that used the Supabase API",mode:"custom",searchString:"select\n  cf.country,\n  count(*) as count\nfrom edge_logs\n  left join unnest(metadata) as m on true\n  left join unnest(m.request) as r on true\n  left join unnest(r.cf) as cf on true\ngroup by\n  cf.country\norder by\n  count desc\n",for:["api"]},{label:"Slow Response Time",mode:"custom",description:"List all Supabase API requests that are slow",searchString:"select\n  cast(timestamp as datetime) as timestamp,\n  event_message,\n  r.origin_time\nfrom edge_logs\n  cross join unnest(metadata) as m\n  cross join unnest(m.response) as r\nwhere\n  r.origin_time > 1000\norder by\n  timestamp desc\nlimit 100\n",for:["api"]},{label:"500 Request Codes",description:"List all Supabase API requests that responded witha 5XX status code",mode:"custom",searchString:"select\n  cast(timestamp as datetime) as timestamp,\n  event_message,\n  r.status_code\nfrom edge_logs\n  cross join unnest(metadata) as m\n  cross join unnest(m.response) as r\nwhere\n  r.status_code >= 500\norder by\n  timestamp desc\nlimit 100\n",for:["api"]},{label:"Top Paths",description:"List the most requested Supabase API paths",mode:"custom",searchString:"select\n  r.path as path,\n  r.search as params,\n  count(timestamp) as c\nfrom edge_logs\n  cross join unnest(metadata) as m\n  cross join unnest(m.request) as r\ngroup by\n  path,\n  params\norder by\n  c desc\nlimit 100\n",for:["api"]},{label:"REST Requests",description:"List all PostgREST requests",mode:"custom",searchString:"select\n  cast(timestamp as datetime) as timestamp,\n  event_message\nfrom edge_logs\n  cross join unnest(metadata) as m\n  cross join unnest(m.request) as r\nwhere\n  path like '%rest/v1%'\norder by\n  timestamp desc\nlimit 100\n",for:["api"]},{label:"Errors",description:"List all Postgres error messages with ERROR, FATAL, or PANIC severity",mode:"custom",searchString:"select\n  cast(t.timestamp as datetime) as timestamp,\n  p.error_severity,\n  event_message\nfrom postgres_logs as t\n  cross join unnest(metadata) as m\n  cross join unnest(m.parsed) as p\nwhere\n  p.error_severity in ('ERROR', 'FATAL', 'PANIC')\norder by\n  timestamp desc\nlimit 100\n",for:["database"]},{label:"Error Count by User",description:"Count of errors by users",mode:"custom",searchString:"select\n  count(t.timestamp) as count,\n  p.user_name,\n  p.error_severity\nfrom postgres_logs as t\n  cross join unnest(metadata) as m\n  cross join unnest(m.parsed) as p\nwhere\n  p.error_severity in ('ERROR', 'FATAL', 'PANIC')\ngroup by\n  p.user_name,\n  p.error_severity\norder by\n  count desc\nlimit 100\n",for:["database"]},{label:"Auth Endpoint Events",description:"Endpoint events filtered by path",mode:"custom",searchString:'select\n  t.timestamp,\n  event_message\nfrom auth_logs as t\nwhere\n  regexp_contains(event_message,"level.{3}(info|warning||error|fatal)")\n  -- and regexp_contains(event_message,"path.{3}(/token|/recover|/signup|/otp)")\nlimit 100\n',for:["database"]},{label:"Storage Object Requests",description:"Number of requests done on Storage Objects",mode:"custom",searchString:"select\n  r.method as http_verb,\n  r.path as filepath,\n  count(*) as num_requests\nfrom edge_logs\n  cross join unnest(metadata) as m\n  cross join unnest(m.request) AS r\n  cross join unnest(r.headers) AS h\nwhere\n  path like '%storage/v1/object/%'\ngroup by\n  r.path, r.method\norder by\n  num_requests desc\nlimit 100\n",for:["api"]},{label:"Storage Egress Requests",description:"Check the number of requests done on Storage Affecting Egress",mode:"custom",searchString:"select\n    r.method as http_verb,\n    r.path as filepath,\n    count(*) as num_requests,\n  from edge_logs\n    cross join unnest(metadata) as m\n    cross join unnest(m.request) AS r\n    cross join unnest(r.headers) AS h\n  where\n    (path like '%storage/v1/object/%' or path like '%storage/v1/render/%')\n    and r.method = 'GET'\n  group by\n    r.path, r.method\n  order by\n    num_requests desc\n  limit 100\n",for:["api"]},{label:"Storage Top Cache Misses",description:"The top Storage requests that miss caching",mode:"custom",searchString:"select\n  r.path as path,\n  r.search as search,\n  count(id) as count\nfrom edge_logs f\n  cross join unnest(f.metadata) as m\n  cross join unnest(m.request) as r\n  cross join unnest(m.response) as res\n  cross join unnest(res.headers) as h\nwhere starts_with(r.path, '/storage/v1/object')\n  and r.method = 'GET'\n  and h.cf_cache_status in ('MISS', 'NONE/UNKNOWN', 'EXPIRED', 'BYPASS', 'DYNAMIC')\ngroup by path, search\norder by count desc\nlimit 100\n",for:["api"]}],u={search_query:e=>"regexp_contains(event_message, '".concat(e,"')")},d={postgres_logs:{...u,database:e=>"identifier = '".concat(e,"'"),"severity.error":"parsed.error_severity in ('ERROR', 'FATAL', 'PANIC')","severity.noError":"parsed.error_severity not in ('ERROR', 'FATAL', 'PANIC')","severity.log":"parsed.error_severity = 'LOG'"},edge_logs:{...u,database:e=>"identifier = '".concat(e,"'"),"status_code.error":"response.status_code between 500 and 599","status_code.success":"response.status_code between 200 and 299","status_code.warning":"response.status_code between 400 and 499","product.database":"request.path like '/rest/%' or request.path like '/graphql/%'","product.storage":"request.path like '/storage/%'","product.auth":"request.path like '/auth/%'","product.realtime":"request.path like '/realtime/%'","method.get":"request.method = 'GET'","method.post":"request.method = 'POST'","method.put":"request.method = 'PUT'","method.patch":"request.method = 'PATCH'","method.delete":"request.method = 'DELETE'","method.options":"request.method = 'OPTIONS'"},function_edge_logs:{...u,"status_code.error":"response.status_code between 500 and 599","status_code.success":"response.status_code between 200 and 299","status_code.warning":"response.status_code between 400 and 499"},function_logs:{...u,"severity.error":"metadata.level = 'error'","severity.notError":"metadata.level != 'error'","severity.log":"metadata.level = 'log'","severity.info":"metadata.level = 'info'","severity.debug":"metadata.level = 'debug'","severity.warn":"metadata.level = 'warn'"},auth_logs:{...u,"severity.error":"metadata.level = 'error' or metadata.level = 'fatal'","severity.warning":"metadata.level = 'warning'","severity.info":"metadata.level = 'info'","status_code.server_error":"cast(metadata.status as int64) between 500 and 599","status_code.client_error":"cast(metadata.status as int64) between 400 and 499","status_code.redirection":"cast(metadata.status as int64) between 300 and 399","status_code.success":"cast(metadata.status as int64) between 200 and 299","endpoints.admin":'REGEXP_CONTAINS(metadata.path, "/admin")',"endpoints.signup":'REGEXP_CONTAINS(metadata.path, "/signup|/invite|/verify")',"endpoints.authentication":'REGEXP_CONTAINS(metadata.path, "/token|/authorize|/callback|/otp|/magiclink")',"endpoints.recover":'REGEXP_CONTAINS(metadata.path, "/recover")',"endpoints.user":'REGEXP_CONTAINS(metadata.path, "/user")',"endpoints.logout":'REGEXP_CONTAINS(metadata.path, "/logout")'},realtime_logs:{...u},storage_logs:{...u},postgrest_logs:{...u,database:e=>"identifier = '".concat(e,"'")},pgbouncer_logs:{...u},supavisor_logs:{...u,database:e=>"m.project like '".concat(e,"%'")},pg_cron_logs:{...u}};(n=r||(r={})).EDGE="edge_logs",n.POSTGRES="postgres_logs",n.FUNCTIONS="function_logs",n.FN_EDGE="function_edge_logs",n.AUTH="auth_logs",n.REALTIME="realtime_logs",n.STORAGE="storage_logs",n.POSTGREST="postgrest_logs",n.SUPAVISOR="supavisor_logs",n.WAREHOUSE="warehouse_logs",n.PG_CRON="pg_cron_logs";let m={api:"edge_logs",database:"postgres_logs",functions:"function_logs",fn_edge:"function_edge_logs",auth:"auth_logs",realtime:"realtime_logs",storage:"storage_logs",postgrest:"postgrest_logs",supavisor:"supavisor_logs",warehouse:"warehouse_logs",pg_cron:"postgres_logs"},p={edge_logs:"Logs obtained from the network edge, containing all API requests",postgres_logs:"Database logs obtained directly from Postgres",function_logs:"Function logs generated from runtime execution",function_edge_logs:"Function call logs, containing the request and response",auth_logs:"Authentication logs from GoTrue",realtime_logs:"Realtime server for Postgres logical replication broadcasting",storage_logs:"Object storage logs",postgrest_logs:"RESTful API web server logs",supavisor_logs:"Cloud-native Postgres connection pooler logs",warehouse_logs:"Logs obtained from a data warehouse collection",pg_cron_logs:"Postgres logs from pg_cron cron jobs"},g=e=>{for(let t in e){let s=e[t];(null===s||""===s||void 0===s)&&delete e[t]}return new URLSearchParams(e).toString()},h={postgres_logs:{severity:{label:"Severity",key:"severity",options:[{key:"error",label:"Error",description:"Show all events with ERROR, PANIC, or FATAL"},{key:"noError",label:"No Error",description:"Show all non-error events"},{key:"log",label:"Log",description:"Show all events that are log severity"}]}},edge_logs:{status_code:{label:"Status",key:"status_code",options:[{key:"error",label:"Error",description:"500 error codes"},{key:"success",label:"Success",description:"200 codes"},{key:"warning",label:"Warning",description:"400 codes"}]},product:{label:"Product",key:"product",options:[{key:"database",label:"Database",description:""},{key:"auth",label:"Auth",description:""},{key:"storage",label:"Storage",description:""},{key:"realtime",label:"Realtime",description:""}]},method:{label:"Method",key:"method",options:[{key:"get",label:"GET",description:""},{key:"options",label:"OPTIONS",description:""},{key:"put",label:"PUT",description:""},{key:"post",label:"POST",description:""},{key:"patch",label:"PATCH",description:""},{key:"delete",label:"DELETE",description:""}]}},function_edge_logs:{status_code:{label:"Status",key:"status_code",options:[{key:"error",label:"Error",description:"500 error codes"},{key:"success",label:"Success",description:"200 codes"},{key:"warning",label:"Warning",description:"400 codes"}]}},function_logs:{severity:{label:"Severity",key:"severity",options:[{key:"error",label:"Error",description:'Show all events that are "error" severity'},{key:"warn",label:"Warning",description:'Show all events that are "warn" severity'},{key:"info",label:"Info",description:'Show all events that are "info" severity'},{key:"debug",label:"Debug",description:'Show all events that are "debug" severity'},{key:"log",label:"Log",description:'Show all events that are "log" severity'}]}},auth_logs:{severity:{label:"Severity",key:"severity",options:[{key:"error",label:"Error",description:"Show all events that have error or fatal severity"},{key:"warning",label:"Warning",description:"Show all events that have warning severity"},{key:"info",label:"Info",description:"Show all events that have info severity"}]},status_code:{label:"Status Code",key:"status_code",options:[{key:"server_error",label:"Server Error",description:"Show all requests with 5XX status code"},{key:"client_error",label:"Client Error",description:"Show all requests with 4XX status code"},{key:"redirection",label:"Redirection",description:"Show all requests that have 3XX status code"},{key:"success",label:"Success",description:"Show all requests that have 2XX status code"}]},endpoints:{label:"Endpoints",key:"endpoints",options:[{key:"admin",label:"Admin",description:"Show all admin requests"},{key:"signup",label:"Sign up",description:"Show all signup and authorization requests"},{key:"recover",label:"Password Recovery",description:"Show all password recovery requests"},{key:"authentication",label:"Authentication",description:"Show all authentication flow requests (login, otp, and Oauth2)"},{key:"user",label:"User",description:"Show all user data requests"},{key:"logout",label:"Logout",description:"Show all logout requests"}]}}},f={log_selection_x_padding:"px-8",space_y:"px-6"},_=[{text:"Last hour",calcFrom:()=>o()().subtract(1,"hour").startOf("hour").toISOString(),calcTo:()=>"",default:!0},{text:"Last 3 hours",calcFrom:()=>o()().subtract(3,"hour").startOf("hour").toISOString(),calcTo:()=>""},{text:"Last 24 hours",calcFrom:()=>o()().subtract(1,"day").startOf("day").toISOString(),calcTo:()=>""}],b=[{text:"Last hour",calcFrom:()=>o()().subtract(1,"hour").startOf("hour").toISOString(),calcTo:()=>"",default:!0},{text:"Last 24 hours",calcFrom:()=>o()().subtract(1,"day").startOf("day").toISOString(),calcTo:()=>""},{text:"Last 3 days",calcFrom:()=>o()().subtract(3,"day").startOf("day").toISOString(),calcTo:()=>""},{text:"Last 7 days",calcFrom:()=>o()().subtract(7,"day").startOf("day").toISOString(),calcTo:()=>""}],y=e=>e.find(e=>e.default)||e[0],v={FREE:{text:"1 day",value:1,unit:"day",promptUpgrade:!0},PRO:{text:"7 days",value:7,unit:"day",promptUpgrade:!0},PAYG:{text:"7 days",value:7,unit:"day",promptUpgrade:!0},TEAM:{text:"28 days",value:28,unit:"day",promptUpgrade:!0},ENTERPRISE:{text:"90 days",value:90,unit:"day",promptUpgrade:!1}},S=["/project/[ref]/logs/edge-logs","/project/[ref]/logs/pooler-logs","/project/[ref]/logs/postgres-logs","/project/[ref]/logs/postgrest-logs"]},40966:function(e,t,s){s.d(t,{AJ:function(){return q},HJ:function(){return C},Ir:function(){return x},My:function(){return N},Oy:function(){return y},Q9:function(){return T},Sj:function(){return b},UR:function(){return w},dP:function(){return I},g8:function(){return j},h6:function(){return P},tI:function(){return _},ue:function(){return E}});var n=s(85229),r=s(28977),a=s.n(r),o=s(13546),i=s.n(o),l=s(85466),c=s.n(l),u=s(3010),d=s.n(u),m=s(52983),p=s(50953),g=s(55145),h=s(70888),f=s(45925);let _=e=>a().unix(Number(e)/1e3/1e3).toISOString(),b=e=>{let t=16===String(e).length;return!Number.isNaN(Number(e))&&t},y=e=>e&&e.timestamp&&e.event_message&&e.id,v=(e,t)=>Object.keys(e).filter(t=>e[t]).flatMap(s=>{let n=t?"".concat(t,".").concat(s):s;return"object"==typeof e[s]?v(e[s],n):[n]}),S=(e,t)=>{let s=Object.keys(t),n=h.Eh[e],r=e=>{let s=n[e],r=i()(t,e);return void 0!==r&&"function"==typeof s?s(r):void 0===s?"string"==typeof r?"".concat(e," = '").concat(r,"'"):"".concat(e," = ").concat(r):void 0===r&&"function"==typeof s?null:s&&!1===r?null:s},a=s.map(e=>{if(void 0===t[e]||"string"==typeof t[e]&&0===t[e].length)return null;if("object"==typeof t[e]){let s=v(t[e],e).map(r).filter(Boolean);return s.length>0?"(".concat(s.join(" or "),")"):null}{let t=r(e);return null===t?null:"(".concat(t,")")}}).filter(Boolean).join(" and ");return a?"where "+a:""},w=function(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:100,n=S(e,t),r=k(e),a="order by timestamp desc";switch(e){case"edge_logs":if(!1===f.Qy)return"\n-- local dev edge_logs query\nselect id, edge_logs.timestamp, event_message, request.method, request.path, response.status_code\nfrom edge_logs\n".concat(r,"\n").concat(n,"\n").concat(a,"\nlimit ").concat(s,";\n");return"select id, identifier, timestamp, event_message, request.method, request.path, response.status_code\n  from ".concat(e,"\n  ").concat(r,"\n  ").concat(n,"\n  ").concat(a,"\n  limit ").concat(s,"\n  ");case"postgres_logs":if(!1===f.Qy)return"\nselect postgres_logs.timestamp, id, event_message, parsed.error_severity\nfrom postgres_logs\n".concat(r,"\n").concat(n,"\n").concat(a,"\nlimit ").concat(s,"\n  ");return"select identifier, postgres_logs.timestamp, id, event_message, parsed.error_severity from ".concat(e,"\n  ").concat(r,"\n  ").concat(n,"\n  ").concat(a,"\n  limit ").concat(s,"\n  ");case"function_logs":return"select id, ".concat(e,".timestamp, event_message, metadata.event_type, metadata.function_id, metadata.level from ").concat(e,"\n  ").concat(r,"\n  ").concat(n,"\n  ").concat(a,"\n  limit ").concat(s,"\n    ");case"auth_logs":return"select id, ".concat(e,".timestamp, event_message, metadata.level, metadata.status, metadata.path, metadata.msg as msg, metadata.error from ").concat(e,"\n  ").concat(r,"\n  ").concat(n,"\n  ").concat(a,"\n  limit ").concat(s,"\n    ");case"function_edge_logs":return"select id, ".concat(e,".timestamp, event_message, response.status_code, request.method, m.function_id, m.execution_time_ms, m.deployment_id, m.version from ").concat(e,"\n  ").concat(r,"\n  ").concat(n,"\n  ").concat(a,"\n  limit ").concat(s,"\n  ");case"supavisor_logs":return"select id, ".concat(e,".timestamp, event_message from ").concat(e," ").concat(r," ").concat(n," ").concat(a," limit ").concat(s);default:return"select id, ".concat(e,".timestamp, event_message from ").concat(e,"\n  ").concat(n,"\n  ").concat(a,"\n  limit ").concat(s,"\n  ");case"pg_cron_logs":let o="where (parsed.application_name = 'pg_cron' OR event_message LIKE '%cron job%')",i=n?"".concat(o," AND ").concat(n.substring(6)):o;return"select identifier, postgres_logs.timestamp, id, event_message, parsed.error_severity, parsed.query\nfrom postgres_logs\n  cross join unnest(metadata) as m\n  cross join unnest(m.parsed) as parsed\n".concat(i,"\n").concat(a,"\nlimit ").concat(s,"\n")}},k=e=>{switch(e){case"edge_logs":return"cross join unnest(metadata) as m\n  cross join unnest(m.request) as request\n  cross join unnest(m.response) as response";case"postgres_logs":return"cross join unnest(metadata) as m\n  cross join unnest(m.parsed) as parsed";case"function_logs":case"auth_logs":return"cross join unnest(metadata) as metadata";case"function_edge_logs":return"cross join unnest(metadata) as m\n  cross join unnest(m.response) as response\n  cross join unnest(m.request) as request";case"supavisor_logs":return"cross join unnest(metadata) as m";default:return""}},E=(e,t)=>"select id, timestamp, event_message, metadata from ".concat(e," where id = '").concat(t,"' limit 1"),I=(e,t)=>{let s=Math.abs(a()().diff(a()(e),"day"));return s>1&&"free"===t||s>7&&"pro"===t||s>28&&"team"===t||s>90&&"enterprise"===t},N=(e,t)=>{let s=S(e,t),n=k(e);return"SELECT count(*) as count FROM ".concat(e," ").concat(n," ").concat(s)},O=e=>{let t=e.iso_timestamp_end?a()(e.iso_timestamp_end):a()(),s=e.iso_timestamp_start?a()(e.iso_timestamp_start):a()(),n="minute",r=360,o=t.diff(s,"minute"),i=t.diff(s,"hour");return o>720?(n="hour",r=120):i>72&&(n="day",r=7),[s.add(-r,n),n]},j=(e,t,s)=>{let[n,r]=O(t),a=S(e,s),o=k(e);return"\nSELECT\n-- log-event-chart\n  timestamp_trunc(t.timestamp, ".concat(r,") as timestamp,\n  count(t.timestamp) as count\nFROM\n  ").concat(e," t\n  ").concat(o,"\n  ").concat(a?a+" and t.timestamp > '".concat(n.toISOString(),"'"):"where t.timestamp > '".concat(n.toISOString(),"'"),"\nGROUP BY\ntimestamp\nORDER BY\n  timestamp ASC\n  ")},q=(e,t)=>{let[s,n]=e,[r,o]=t;if(s&&n&&o&&!r){let e=a()(o).diff(a()(s)),t=a()(s);if(e<=0){let e=Math.abs(a()(n).diff(t,"minute"));t=a()(o).subtract(e,"minute")}return[t.toISOString(),o]}return!o&&r?[r,n]:[r,o]},T=()=>{let e=(0,n.useMonaco)();(0,m.useEffect)(()=>{if(e){let t=e.languages.registerCompletionItemProvider("pgsql",{triggerCharacters:["`"," ","."],provideCompletionItems:function(t,s,n){let r=new p.Z(t,s.column-2,s.lineNumber-1);if(r.isNextDQuote())return{suggestions:[]};let a=[],o=g.Z.schemas.filter(e=>r._text.includes(e.reference));if(0===o.length&&(o=g.Z.schemas),r.isNextPeriod()){let t=o.flatMap(e=>e.fields).flatMap(e=>{let[t,...s]=e.path.split(".");return s}).map(t=>({label:t,kind:e.languages.CompletionItemKind.Property,insertText:t}));a=a.concat(t)}if("`"===n.triggerCharacter||" "===n.triggerCharacter){let t=g.Z.schemas.map(t=>({label:t.reference,kind:e.languages.CompletionItemKind.Class,insertText:t.reference})),s=o.flatMap(e=>e.fields).flatMap(e=>e.path.split(".").slice(0,-1)).map(t=>({label:t,kind:e.languages.CompletionItemKind.Property,insertText:t}));a=(a=a.concat(s)).concat(t)}return{suggestions:d()(a,"label")}}});return()=>{t.dispose()}}},[e])},P=function(e,t,s,n,r,o){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:20;if(e.length>i)return e.map(e=>{let s=a().utc(e[t]).toISOString();return e[t]=s,e});if(e.length<=1&&!(r||o))return e;let l=e.map(e=>a().utc(e[t])),u=o?a().utc(o):a().utc(Math.max.apply(null,l)),d=r?a().utc(r):a().utc(Math.min.apply(null,l)),m=R(e.length>0?l:[d,u]),p=e.map(e=>{let s=a().utc(e[t]).toISOString();return e[t]=s,e}),g=u.diff(d,m);if(g>1e4)throw Error("The selected date range will render more than 10,000 data points within the charts, which will degrade browser performance. Please select a smaller date range.");for(let e=0;e<=g;e++){let r=d.add(e,m),a=("string"==typeof s?[s]:s).reduce((e,t)=>({...e,[t]:n}),{});l.find(e=>c()(e,r))||p.push({[t]:r.toISOString(),...a})}return p},R=e=>{let t=e.reduce((e,t)=>{let s=A(t);return e[s]+=1,e},{second:0,minute:0,hour:0,day:0});return Object.keys(t).reduce((e,s)=>t[e]>t[s]?e:s)},A=e=>({0:"second",1:"minute",2:"hour",3:"day"})[["second","minute","hour"].map(t=>e.get(t)).reduce((e,t)=>(0===t&&(e+=1),e),0)];function C(e){let t=e.replace(/--.*$/gm,"").replace(/\/\*[\s\S]*?\*\//gm,"");return/\b(WITH)\b(?=(?:[^']*'[^']*')*[^']*$)/i.test(t)}function x(e){let t=e.replace(/--.*$/gm,"").replace(/\/\*[\s\S]*?\*\//gm,"");return/\b(ILIKE)\b(?=(?:[^']*'[^']*')*[^']*$)/i.test(t)}},50953:function(e,t,s){var n=s(98219);class r{hasNext(){return this.lineNumber>=0||this.offset>=0}isFowardDQuote(){return!!this.hasForward()&&34===this.peekForward()}isNextDQuote(){return!!this.hasNext()&&34===this.peekNext()}isNextPeriod(){return!!this.hasNext()&&46===this.peekNext()}peekNext(){return this.offset<0?this.lineNumber>0?10:0:this._line.charCodeAt(this.offset)}hasForward(){return this.lineNumber<this._lines.length||this.offset<this._line.length}peekForward(){return this.offset===this._line.length?this.lineNumber===this._lines.length?0:10:this._line.charCodeAt(this.offset+1)}next(){if(this.offset<0)return this.lineNumber>0?(this.lineNumber--,this._line=this._lines[this.lineNumber],this.offset=this._line.length-1,10):(this.lineNumber=-1,0);let e=this._line.charCodeAt(this.offset);return this.offset--,e}readArguments(){let e=0,t=0,s=0,n=0;for(;this.hasNext();){let r=this.next();switch(r){case 40:if(--e<0)return n;break;case 41:e++;break;case 123:s--;break;case 125:s++;break;case 91:t--;break;case 93:t++;break;case 34:case 39:for(;this.hasNext()&&r!==this.next(););break;case 44:!e&&!t&&!s&&n++}}return -1}readIdent(){let e=!1,t=!1,s="";for(;this.hasNext();){let n=this.peekNext();if(e&&!t&&!this._isIdentPart(n))break;if(n=this.next(),!e&&t&&34===n){e=!0;continue}if(e||32!==n&&9!==n&&10!=n){if(!e&&(34===n||this._isIdentPart(n)))e=!0,t=34===n,s=String.fromCharCode(n)+s;else if(e){if(t){if(0===n||(s=String.fromCharCode(n)+s,34===n))break}else s=String.fromCharCode(n)+s}}}return s}readIdents(e){let t=[];for(;e>0;){e--;let s=this.readIdent();if(!s||(t.push(s),!this.isNextPeriod()))break}return t.reverse()}_isIdentPart(e){return 95===e||e>=97&&e<=122||e>=65&&e<=90||e>=48&&e<=57}constructor(e,t,s){(0,n._)(this,"_line",void 0),(0,n._)(this,"_text",void 0),(0,n._)(this,"_lines",void 0),(0,n._)(this,"model",void 0),(0,n._)(this,"offset",void 0),(0,n._)(this,"lineNumber",void 0),this.model=e,this.offset=t,this.lineNumber=s,this._text=e.getValue(),this._lines=this._text.split(/\r?\n/g),this._line=this._lines[s]}}t.Z=r},98453:function(e,t,s){var n=s(28894),r=s(52983),a=s(70888),o=s(55410),i=s(77946),l=s(40966),c=s(45925);t.Z=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},s=!(arguments.length>2)||void 0===arguments[2]||arguments[2],u=(0,a.PJ)(a.up),[d,m]=(0,r.useState)({sql:(null==t?void 0:t.sql)||"",project:e,iso_timestamp_start:t.iso_timestamp_start?t.iso_timestamp_start:u.calcFrom(),iso_timestamp_end:t.iso_timestamp_end?t.iso_timestamp_end:u.calcTo()}),p=s&&void 0!==e&&!!d.sql,g=(0,a.GT)(d),h=(0,l.HJ)(d.sql||""),f=(0,l.Ir)(d.sql||""),{data:_,error:b,isLoading:y,isRefetching:v,refetch:S}=(0,n.a)(["projects",e,"logs",g],t=>{let{signal:s}=t;return(0,o.U2)("".concat(i.T5,"/projects/").concat(e,"/analytics/endpoints/logs.all?").concat(g),{signal:s})},{enabled:p,refetchOnWindowFocus:!1}),w=b?b.message:null;return!w&&(null==_?void 0:_.error)&&(w=null==_?void 0:_.error),c.Qy&&(h&&(w={message:"The parser does not yet support WITH and subquery statements.",docs:"https://supabase.com/docs/guides/platform/advanced-log-filtering#the-with-keyword-and-subqueries-are-not-supported"}),f&&(w={message:"BigQuery does not support ILIKE. Use REGEXP_CONTAINS instead.",docs:"https://supabase.com/docs/guides/platform/advanced-log-filtering#the-ilike-and-similar-to-keywords-are-not-supported"})),{params:d,isLoading:p&&y||v,logData:(0,o.d8)(_)&&_.result?_.result:[],error:w,changeQuery:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";m(t=>({...t,sql:e}))},runQuery:()=>S(),setParams:m}}},93009:function(e,t,s){s.d(t,{Z:function(){return l}});var n=s(97458),r=s(52983),a=s(59080),o=s(41879);function i(e,t){if(!t.error)return delete e[t.key],e;if(t)return{...e,[t.key]:t.error};throw Error()}function l(e){let{validate:t,...s}=e,[l,c]=(0,r.useReducer)(i,null),u=(0,a.TA)({validateOnBlur:!0,...s,validationSchema:s.validationSchema,initialValues:s.initialValues,onSubmit:s.onSubmit,validate:t||function(){return l}});return(0,n.jsx)("form",{id:s.id,name:s.name,onSubmit:u.handleSubmit,className:s.className,style:s.style,method:"POST","data-sentry-component":"Form","data-sentry-source-file":"Form.tsx",children:(0,n.jsx)(o.o,{values:u.values,errors:u.errors,formContextOnChange:u.handleChange,handleBlur:u.handleBlur,touched:u.touched,fieldLevelValidation:function(e,t){c({key:e,error:t})},"data-sentry-element":"FormContextProvider","data-sentry-source-file":"Form.tsx",children:s.children({errors:u.errors,touched:u.touched,isSubmitting:u.isSubmitting,isValidating:u.isValidating,submitCount:u.submitCount,initialValues:u.initialValues,values:u.values,handleReset:u.handleReset,resetForm:u.resetForm,setFieldValue:u.setFieldValue})})})}}}]);